@model PostDetailViewModel
@{
    ViewData["Title"] = Model.Post.Title;
}
<style>
    .post-detail-container {
        max-width: 1000px;
        margin: 40px auto;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 30px;
        font-family: 'Segoe UI', sans-serif;
    }

    .post-left {
        border-radius: 16px;
        overflow: hidden;
        background: #fff;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
        padding: 0;
    }

        .post-left img {
            width: 100%;
            height: auto;
            object-fit: cover;
        }

    .post-meta {
        padding: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        font-size: 14px;
    }

        .post-meta i {
            margin-right: 6px;
        }

        .post-meta .meta-item {
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            color: #444;
            font-weight: 500;
        }

        .post-meta .meta-user {
            font-weight: bold;
            color: #007bff;
        }

    .post-right {
        background: #fff;
        padding: 25px;
        border-radius: 16px;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
    }

        .post-right h1 {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .post-right .post-date {
            color: #999;
            font-size: 14px;
            margin-bottom: 15px;
        }

    .comment-card {
        border: 1px solid #eaeaea;
        padding: 12px 16px;
        border-radius: 10px;
        margin-bottom: 10px;
        background-color: #fafafa;
    }

        .comment-card h5 {
            margin-bottom: 5px;
        }

        .comment-card small {
            color: #777;
        }

    .no-comments {
        color: #999;
        font-style: italic;
    }

    .focus-mode {
        background-color: #f5f5dc; 
        color: #333;  
    }

        .focus-mode .post-detail-container {
            background-color: #f5f5dc; 
            color: #333;  
            padding: 20px;
            border-radius: 10px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .focus-mode body {
            background-color: #f5f5dc;
            transition: background-color 0.3s ease;
        }

</style>

<div class="post-detail-container">
    <!-- Left side -->
    <div class="post-left">
        <img src="@Model.Post.FeatureImagePath" alt="@Model.Post.Title" />
        <div class="post-meta">
            <div class="meta-item">
                <i class="fa fa-heart" style="color: @(Model.UserLikedPost ? "red" : "gray")"></i>
                <span>@Model.Post.LikesCount</span>
            </div>
            <div class="meta-item">
                <i class="bi bi-eye"></i>
                <span>@Model.Post.Views</span>
            </div>
            <div class="meta-item meta-user">
                @Model.Post.UserName
            </div>
        </div>
    </div>

    <!-- Right side -->
    <div class="post-right">
        <button id="focusModeBtn" class="btn btn-outline-secondary mb-3">Focus Mode</button>

        <h1>@Model.Post.Title</h1>
        <div class="post-date">Published on @Model.Post.CreatedAt.ToString("MMMM dd, yyyy")</div>

        <div class="post-content mb-4">
            @Html.Raw(Model.Post.Content)
        </div>

        <h3>Comments</h3>
        @if (Model.Post.Comments?.Any() ?? false)
        {
            <div class="comments-section mb-4">
                @foreach (var comment in Model.Post.Comments)
                {
                    <div class="comment-card">
                        <h5>@comment.User?.UserName</h5>
                        <small>@comment.CommentDate.ToString("M/dd/yyyy, h:mm tt")</small>
                        <p>@comment.Content</p>

                    </div>
                }
            </div>
        }
        else
        {
            <p class="no-comments">No comments yet. Be the first to comment!</p>
        }

        @if (User.Identity.IsAuthenticated)
        {
            <form id="commentForm" class="mt-4">
                <div class="form-group mb-2">
                    <label for="Content">Content</label>
                    <textarea id="Content" name="Content" rows="3" required class="form-control"></textarea>
                </div>
                <button type="submit" class="btn btn-primary px-4">Share comment</button>
            </form>
        }
    </div>
</div>
<script>
    const focusBtn = document.getElementById("focusModeBtn");

    focusBtn.addEventListener("click", () => {
        document.body.classList.toggle("focus-mode");

        // تغيير نص الزر حسب الوضع الحالي
        if (document.body.classList.contains("focus-mode")) {
            focusBtn.textContent = "Exit Focus Mode";
        } else {
            focusBtn.textContent = "Focus Mode";
        }
    });



</script>