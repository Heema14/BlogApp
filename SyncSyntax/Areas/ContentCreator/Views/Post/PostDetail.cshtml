@model PostDetailViewModel
@{
    ViewData["Title"] = Model.Post.Title;
}

<style>
    .content-wrapper {
        padding: 20px;
        max-width: 900px;
        margin: 0 auto;
        font-family: Arial, sans-serif;
    }

    /* Feature image styles */
    .feature-image {
        width: 100%;
        height: 500px;
        object-fit: cover;
        margin-bottom: 20px;
    }
</style>


<div class="content-wrapper">

    <h1>@Model.Post.Title</h1>

    <p>Category:<strong class="badge bg-secondary m-1">@Model.Post.Category?.Name</strong></p>

    @if (!string.IsNullOrEmpty(Model.Post.FeatureImagePath))
    {
        <img src="@Model.Post.FeatureImagePath" alt="@Model.Post.Title" class="feature-image" />
    }

    <hr>
    <div class="post-date">Published on @Model.Post.CreatedAt.ToString("MMMM dd, yyyy")</div>
@*     <div>
        <p>@Model.Post.Description</p>
        @Html.Raw(Model.Post.Content)
    </div> *@

    <hr />

    <button id="likeButton" class="btn btn-light mb-2" onclick="toggleLike(@Model.Post.Id)">
        <i class="fa fa-heart" id="likeIcon"
           style="color: @(Model.Post.LikesCount > 0 ? "red" : (ViewData["UserLikedPost"] != null && (bool)ViewData["UserLikedPost"] ? "red" : "gray"))"></i>

        <span id="likesCount">@Model.Post.LikesCount</span>
        Like
    </button>



    <h3>Comments</h3>

    @if (Model.Post.Comments?.Any() ?? false)
    {
        <div class="comments-section mb-5">
            @foreach (var comment in Model.Post.Comments)
            {
                <div class="card mb-3 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">@comment.User?.UserName</h5>
                        <p class="comment-date"><small>@comment.CommentDate.ToString("M/dd/yyyy, h:m")</small></p>
                        <p class="card-text">@comment.Content</p>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="no-comments text-muted fst-italic">No comments yet. Be the first to comment!</p>
        <div class="comments-section mb-5"><!-- سيتم ملؤه عند أول تعليق --></div>
    }

    <hr />

    @if (User.Identity.IsAuthenticated)
    {
        <h4>Add a Comment</h4>

        <form id="commentForm">
            <div class="form-group my-2">
                <label for="Content">Content</label>
                <textarea for="Content" id="Content" name="Content" rows="3" required class="form-control"></textarea>
            </div>

            <button type="submit" class="btn btn-primary mt-2 p-2 rounded">Share comment</button>
        </form>
    }
</div>



<partial name="_ValidationScriptsPartial" />
<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

<script>
    const postId = @Model.Post.Id;

    const connection = new signalR.HubConnectionBuilder()
        .withUrl(`/commentHub?postId=${postId}`)
        .build();

    connection.on("ReceiveComment", function (userName, content, commentDate) {
        $('.no-comments').remove();

        if ($('.comments-section').length === 0) {
            $('.post-content').after('<div class="comments-section mb-5"></div>');
        }

        $('.comments-section').append(`
            <div class="card mb-3 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">${userName}</h5>
                    <p class="comment-date"><small>${commentDate}</small></p>
                    <p class="card-text">${content}</p>
                </div>
            </div>
        `);
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    $(document).ready(function () {
        $('#commentForm').on('submit', function (event) {
            event.preventDefault();

            const content = $('#Content').val();

            connection.invoke("BroadcastComment", content, postId)
                .then(() => {
                    $('#commentForm')[0].reset();
                })
                .catch(function (err) {
                    return console.error(err.toString());
                });
        });
    });


    function toggleLike(postId) {

        $.ajax({
            url: '@Url.Action("Like", "Post")/',
            type: 'POST',
            data: {
                postId: postId
            },
            success: function(response) {
                if (response.success) {

                    $('#likesCount').text(response.likesCount);


                    if (response.userLiked) {
                        $('#likeIcon').css('color', 'gray');
                    } else {
                        $('#likeIcon').css('color', 'red');
                    }
                } else {
                    alert(response.message);
                }
            },
            error: function() {
                alert('An error occurred while processing your request.');
            }
        });
    }



</script>
