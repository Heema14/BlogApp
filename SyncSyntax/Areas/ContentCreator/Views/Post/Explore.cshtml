@model IEnumerable<PostWithFollowStatusViewModel>

@{
    ViewData["Title"] = "Blog Posts";
}
<link href="~/css/sidebar.css" rel="stylesheet" />



<!-- Advanced Search -->
@Html.Partial("_AdvancedSearchForm", new ViewDataDictionary(ViewData) { { "SearchAction", "Explore" } })






@if (!Model.Any())
{
    <div class="alert alert-warning text-center mt-4">
        <i class="bi bi-info-circle"></i> No posts available in this category.
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 mt-4">
        @foreach (var post in Model)
        {
            <!-- Posts Grid -->
            <div class="col">

                <div class="card h-100 border-0 shadow-lg rounded-4 overflow-hidden">

                    <!-- Post Image with Overlay -->
                    <div class="overflow-hidden position-relative" style="height: 220px;">
                        <img src="@(!string.IsNullOrEmpty(post.Post.FeatureImagePath) ? post.Post.FeatureImagePath : "/images/default-image.jpg")"
                             class="card-img-top h-100 w-100 object-fit-cover transition"
                             alt="@post.Post.Title"
                             style="transition: transform 0.3s ease;" />

                        <!-- Read More Overlay -->


                        <a data-bs-toggle="modal" data-bs-target="#postModal" data-id="@post.Post.Id"
                           class="read-more-overlay d-flex justify-content-center align-items-center text-white text-decoration-none">
                            <span class="fs-6 fw-semibold"><i class="bi bi-book me-2"></i>Read More</span>
                        </a>
                    </div>

                    <div class="card-body">
                        <!-- User Info and Actions -->
                        <div class="d-flex align-items-center justify-content-between mb-3">
                            <a asp-action="Profile" asp-controller="Following" asp-route-userId="@post.Post.UserId" class="d-flex align-items-center gap-2 text-decoration-none text-dark">
                                <img src="@post.Post.UserImageUrl" alt="User" class="rounded-circle" style="width: 30px; height: 30px;">
                                <span>@post.Post.UserName</span>
                            </a>

                            <div class="d-flex align-items-center gap-2 actions">
                                <button class="icon-expand-btn save-toggle-btn"
                                        data-hover-text="@(post.IsSaved ? "Un Save" : "Save")"
                                        data-post-id="@post.Post.Id"
                                        data-return-page="FollowingPosts"
                                        aria-label="@(post.IsSaved ? "Unsave post" : "Save post")">
                                    <i class="bi svgIcon @(post.IsSaved ? "bi-bookmark-fill" : "bi-bookmark")"></i>
                                </button>


                                @if (User.FindFirstValue(ClaimTypes.NameIdentifier) != post.Post.UserId)
                                {
                                    if (post.IsFollowing)
                                    {
                                        <form asp-controller="Following" asp-action="Unfollow" asp-route-userId="@post.Post.UserId" method="post">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="icon-expand-btn" data-hover-text="Un Follow">
                                                <i class="bi bi-person-dash me-1 svgIcon"></i>
                                            </button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form asp-controller="Following" asp-action="Follow" asp-route-userId="@post.Post.UserId" method="post">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="icon-expand-btn" data-hover-text="Follow">
                                                <i class="bi bi-person-plus me-1 svgIcon"></i>
                                            </button>
                                        </form>
                                    }
                                }



                                <form id="antiForgeryForm" style="display:none;">
                                    @Html.AntiForgeryToken()
                                </form>


                            </div>

                        </div>

                        <!-- Post Title and Likes -->
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="card-title fw-bold">@post.Post.Title</h5>
                            <div class="d-flex align-items-center gap-1 like-btn" style="cursor: pointer;" onclick="toggleLike(@post.Post.Id)">
                                <i id="likeIcon-@post.Post.Id" class="bi bi-heart-fill" style="color: @(post.Post.PostLikes.Any(l => l.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier)) ? "red" : "gray");"></i>
                                <span id="likesCount-@post.Post.Id">@post.Post.LikesCount</span>
                            </div>
                        </div>

                        <!-- Date -->
                        <p class="text-muted mb-2 DatePost">
                            <i class="bi bi-calendar-event me-1"></i>
                            @post.Post.PublishedDate.ToString("MMMM dd, yyyy")
                        </p>

                        <!-- Preview -->
                        @{
                            var contentTag = HtmlTagHelper.RemoveHtmlTags(post.Post.Content);
                            var preview = contentTag.Length > 100 ? contentTag.Substring(0, 100) + "..." : contentTag;
                        }

                        <p class="card-text text-black">@preview</p>

                        <!-- Category -->
                        @if (post.Post.Category != null)
                        {
                            <span class="badge bg-info text-dark mt-2">
                                <i class="bi bi-tag me-1"></i> @post.Post.Category.Name
                            </span>
                        }
                    </div>

                </div>

            </div>
        }
    </div>
}



<!-- Modal -->
<div class="modal fade" id="postModal" tabindex="-1" aria-labelledby="postModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title" id="postModalLabel">Post Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <!-- Modal Body -->
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/js/SavePost.js"></script>
    <!-- jQuery and jQuery UI -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.3/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.3/themes/base/jquery-ui.css">

    <script>
                $(document).on('click', '[data-bs-toggle="modal"]', function (e) {
            var button = $(e.currentTarget);
            var postId = button.data('id');

            console.log("Opening post with ID: " + postId);

            $('#postModal').find('.modal-body').html('<div class="text-center"><i class="fa fa-spinner fa-spin"></i> Loading...</div>');

            $.ajax({
                url: '@Url.Action("Detail", "Post")/' + postId,
                type: 'GET',
                success: function (response) {
                    $('#postModal .modal-body').html(response);

                    // **Setup SignalR connection for Likes inside modal after content loads**
                    setupPostLikeHub(postId);

                    // **Attach toggleLike function to button inside modal**
                    $('#likeButton-' + postId).off('click').on('click', function () {
                        toggleLike(postId);
                    });
                },
                error: function () {
                    $('#postModal .modal-body').html('<p class="text-danger">Failed to load post details.</p>');
                }
            });
        });



        // SignalR connection holder
        let postConnection = null;

        function setupPostLikeHub(postId) {
            if (postConnection) {
                postConnection.stop();
                postConnection = null;
            }

            postConnection = new signalR.HubConnectionBuilder()
                .withUrl(`/postHub?postId=${postId}`)
                .build();

            postConnection.on("ReceiveLike", function (postId, likesCount) {
                console.log("Received like update:", postId, likesCount);
                $('#likesCount-' + postId).text(likesCount);
            });

            postConnection.start().catch(err => console.error(err.toString()));
        }

             function toggleLike(postId) {
            $.ajax({
                url: '@Url.Action("Like", "Post")',
                type: 'POST',
                data: { postId: postId },
                success: function (response) {
                    if (response.success) {
                        $('#likesCount-' + postId).text(response.likesCount);
                        $('#likeIcon-' + postId).css('color', response.userLiked ? 'red' : 'gray');
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('An error occurred while processing your request.');
                }
            });
        }



        // Clear modal content and stop SignalR when modal closes
        $('#postModal').on('hidden.bs.modal', function () {
            if (postConnection) {
                postConnection.stop();
                postConnection = null;
            }
            $(this).find('.modal-body').html('');
        });

        const searchSuggestionsUrl = '@Url.Action("SearchSuggestions", "Post")';

    </script>



    <script src="~/js/Search.js"></script>

}